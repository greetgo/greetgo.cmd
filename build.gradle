plugins {
  id "org.ajoberstar.grgit" version "2.3.0"
}

def ggRepo = System.getenv('GG_REPO')

allprojects {
  apply plugin: 'java'
  apply plugin: 'maven'
  apply plugin: 'idea'

  version = rootProject.file('version.txt').text.trim()

  sourceCompatibility = 1.8
  targetCompatibility = 1.8

  group = "kz.greetgo.cmd"

}

subprojects {

  repositories {
    mavenLocal()
    if (ggRepo?.trim()) maven { url ggRepo.trim() }
    mavenCentral()
  }

  dependencies {
    ext.jacksonVersion = "2.7.3"
    ext.depinjectVersion = '2.0.0'
    ext.greetgoDbVersion = '2.0.0'
    ext.greetgoConfVersion = '0.1.5'
    ext.greetgoUtilVersion = "2.0.0"
    ext.jettyVersion = '9.4.0.v20161208'
    ext.guavaVersion = '23.0'

    testCompile 'org.testng:testng:6.5.1'
    compile 'org.easytesting:fest-assert-core:2.0M10'

  }

  test.useTestNG()

  //test { options.suites("test1.xml") }

  idea.module.inheritOutputDirs = false
  idea.module.outputDir = file("$buildDir/classes/main/")
  idea.module.testOutputDir = file("$buildDir/classes/test/")

  [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
  [compileJava, compileTestJava]*.options*.debugOptions*.debugLevel = "source,lines,vars"

  sourceSets.main.java.srcDirs = ["src"]
  sourceSets.test.java.srcDirs = ["test_src"]
  sourceSets.main.resources.srcDirs = ["src_resources"]
  sourceSets.test.resources.srcDirs = ["test_resources"]

  sourceSets.main.resources {
    srcDirs += sourceSets.main.java.srcDirs
    exclude '**/*.java'
  }
  sourceSets.test.resources {
    srcDirs += sourceSets.test.java.srcDirs
    exclude '**/*.java'
  }

  jar {
    manifest {
      attributes 'Specification-Title': project.name
      attributes 'Specification-Version': version
      attributes 'Specification-Vendor': "greetgo!"
      attributes 'Implementation-Version': grgit ? grgit.head().id : "unknown"
      attributes 'Created-By': System.getProperty("user.name")
      attributes 'Created-At': new Date().format("yyyy-MM-dd/HH:mm:ss")
    }
  }

}
